[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "importobot"
version = "0.1.0"
description = "A tool to convert Zephyr test cases from JSON format to Robot Framework format"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "robotframework>=6.0.0",
    "robotframework-seleniumlibrary>=6.0.0",
    "robotframework-sshlibrary>=3.8.0",
    "robotframework-requests>=0.9.4",
    "robotframework-databaselibrary>=1.2.4",
    "pytest-cov>=7.0.0",
    "psutil>=7.0.0",
]

[project.scripts]
importobot = "importobot.__main__:main"

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "coverage>=7.0.0",
    "ruff>=0.1.0",
    "pylint>=2.17.0",
    "pycodestyle>=2.11.0",
    "pydocstyle>=6.3.0",
    "black>=23.0.0",
    "pyyaml>=6.0.0",
    "mypy>=1.0.0",
    "ty",
    "types-PyYAML",
    "types-psutil>=7.0.0.20250822",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose"
]

[tool.coverage.run]
source = ["src"]

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "C",    # flake8-comprehensions
    "B",    # flake8-bugbear
]
extend-ignore = [
    "E501", # Line too long (handled by ruff format)
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pylint]
rcfile = "pylintrc"
ignore = [".venv"]

[tool.black]
exclude = '''
/(?:
    \.venv
)/
'''



[tool.pycodestyle]
max-line-length = 88

[tool.pydocstyle]
match-dir = "^(?!.venv).*"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
