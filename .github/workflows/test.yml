name: Test

permissions:
  contents: read # For actions/checkout to fetch code
  actions: write # For actions/cache to save/restore cache
  pull-requests: write # For codecov-action to post comments

concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ main ]
    paths:
      - "src/**/*.py"
      - "tests/**/*.py"
      - "examples/json/**/*.json"
      - "pyproject.toml"
      - "Makefile"
      - ".github/workflows/test.yml"
  pull_request:
    types: [opened, synchronize]
    branches: [ main ]
    paths:
      - "src/**/*.py"
      - "tests/**/*.py"
      - "examples/json/**/*.json"
      - "pyproject.toml"
      - "Makefile"
      - ".github/workflows/test.yml"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Install uv
      uses: astral-sh/setup-uv@v7
      with:
        version: "latest"
        enable-cache: true
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: uv sync --dev
    
    - name: Run full test suite via Makefile
      run: make test-all

    - name: Upload test results
      uses: actions/upload-artifact@v5
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: test-results.xml
        retention-days: 7
    
    - name: Generate coverage report
      run: uv run coverage report
    
    - name: Generate coverage XML
      run: uv run coverage xml

    - name: Verify test count baseline
      run: uv run python scripts/src/importobot_scripts/devtools/check_test_count.py

    - name: Minimize uv cache
      run: uv cache prune --ci
    
    - name: Check for CODECOV_TOKEN
      id: codecov-check
      run: |
        if [ -z "${{ secrets.CODECOV_TOKEN }}" ]; then
          echo "CODECOV_TOKEN secret is not set. Codecov upload will be skipped."
          echo "codecov_available=false" >> $GITHUB_OUTPUT
        else
          echo "CODECOV_TOKEN is available."
          echo "codecov_available=true" >> $GITHUB_OUTPUT
        fi

    - name: Upload coverage to Codecov
      if: steps.codecov-check.outputs.codecov_available == 'true'
      uses: codecov/codecov-action@v5
      with:
        files: ./coverage.xml
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false
        verbose: true

  performance:
    name: Performance Regression
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v5

    - name: Install uv
      uses: astral-sh/setup-uv@v7
      with:
        version: "latest"
        enable-cache: true

    - name: Set up Python 3.11
      uses: actions/setup-python@v6
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: uv sync --dev --extra all

    - name: Run performance regression tests
      run: uv run pytest tests/performance --maxfail=1 --durations=10

    - name: Run Bronze ingestion benchmark
      env:
        BRONZE_BENCHMARK_MIN_RATIO: "0.75"
        BRONZE_BENCHMARK_MIN_BASELINE: "250"
      run: |
        cd scripts && uv run python -m importobot_scripts.benchmarks.run_bronze_benchmark --output performance-metrics/bronze_benchmark.json

    - name: Upload benchmark metrics
      uses: actions/upload-artifact@v5
      if: always()
      with:
        name: bronze-benchmark-metrics
        path: performance-metrics/bronze_benchmark.json
        retention-days: 7

    - name: Minimize uv cache
      run: uv cache prune --ci
