name: Test

permissions:
  contents: read # For actions/checkout to fetch code
  actions: write # For actions/cache to save/restore cache
  pull-requests: write # For codecov-action to post comments

concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ main ]
    paths:
      - "src/**/*.py"
      - "tests/**/*.py"
      - "examples/json/**/*.json"
      - "pyproject.toml"
      - "Makefile"
      - ".github/workflows/test.yml"
  pull_request:
    types: [opened, synchronize]
    branches: [ main ]
    paths:
      - "src/**/*.py"
      - "tests/**/*.py"
      - "examples/json/**/*.json"
      - "pyproject.toml"
      - "Makefile"
      - ".github/workflows/test.yml"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
        enable-cache: true
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: uv sync --dev
    
    - name: Run tests with coverage
      run: uv run coverage run -m pytest --junitxml=test-results.xml

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: test-results.xml
        retention-days: 7
    
    - name: Generate coverage report
      run: uv run coverage report
    
    - name: Generate coverage XML
      run: uv run coverage xml
    
    - name: Minimize uv cache
      run: uv cache prune --ci
    
    - name: Check for CODECOV_TOKEN
      id: codecov-check
      run: |
        if [ -z "${{ secrets.CODECOV_TOKEN }}" ]; then
          echo "CODECOV_TOKEN secret is not set. Codecov upload will be skipped."
          echo "codecov_available=false" >> $GITHUB_OUTPUT
        else
          echo "CODECOV_TOKEN is available."
          echo "codecov_available=true" >> $GITHUB_OUTPUT
        fi

    - name: Upload coverage to Codecov
      if: steps.codecov-check.outputs.codecov_available == 'true'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false
        verbose: true
